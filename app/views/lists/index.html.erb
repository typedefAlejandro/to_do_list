<div class="login-bg" style="min-height: 100vh; width: 100%; background: linear-gradient(120deg, #e0e0e0 60%, #c7a72a 100%); display: flex; justify-content: center;">
  <div class="main-content" style="width: 100%; max-width: 1100px; margin: 32px auto; padding: 32px 0;">
    <!-- Botões removidos daqui, agora ficam fixos na lateral -->
    <!-- Modal de nova pasta -->
    <div id="folder-modal" style="display: none; position: fixed; top: 0; left: 0; width: 100vw; height: 100vh; background: rgba(0,0,0,0.3); align-items: center; justify-content: center; z-index: 1000;">
      <div style="background: white; padding: 2rem; border-radius: 8px; min-width: 300px; position: relative;">
        <button id="close-folder-modal" style="position: absolute; top: 8px; right: 8px; background: none; border: none; font-size: 1.5rem; cursor: pointer;">&times;</button>
        <h3>Nova pasta</h3>
        <%= render 'folders/form', folder: Folder.new %>
      </div>
    </div>
    <% if @lists && @lists.any? %>
      <div class="lists-flat-grid" style="display: flex; flex-wrap: wrap; gap: 32px 24px; margin-bottom: 32px;">
        <% @lists.each do |list| %>
          <%= render partial: 'lists/list_card', locals: { list: list } %>
        <% end %>
      </div>
    <% else %>
      <div class="folders-column" id="folders-list">
        <% @folders.each do |folder| %>
          <div class="folder-block" style="position: relative; background: #f6e7c1; border-radius: 14px; box-shadow: 0 2px 12px #0002; margin-bottom: 32px; padding: 0 0 24px 0;">
            <div class="folder-title" style="display: flex; align-items: center; justify-content: space-between; background: #c7a72a; border-radius: 14px 14px 0 0; padding: 18px 28px 12px 28px; font-size: 1.25rem; font-weight: bold; color: #4d3c00;">
              <div style="display: flex; align-items: center; gap: 2px;">
                <span><%= folder.name %></span>
                <button class="edit-icon-btn" title="Editar pasta" type="button" onclick="openFolderEditModal(<%= folder.id %>)" style="background: none; border: none; margin-left: 2px; cursor: pointer; padding: 0; display: flex; align-items: center;">
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="none" viewBox="0 0 24 24">
                    <path fill="#8c6b6b" d="M3 17.25V21h3.75l11-11.03-3.75-3.75L3 17.25zm14.71-9.04a1 1 0 0 0 0-1.41l-2.5-2.5a1 1 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.99-1.67z"/>
                  </svg>
                </button>
              </div>
              <button class="btn" style="margin-left: 12px; padding: 4px 12px; font-size: 1.2rem; background: #8c6b6b; color: #fff; border-radius: 7px;" title="Adicionar lista" type="button" onclick="openListModal(<%= folder.id %>)">+</button>
            </div>
            <!-- Modal de edição de pasta -->
            <div id="folder-edit-modal-<%= folder.id %>" style="display: none; position: fixed; top: 0; left: 0; width: 100vw; height: 100vh; background: rgba(0,0,0,0.3); align-items: center; justify-content: center; z-index: 1000;">
              <div style="background: white; padding: 2rem; border-radius: 8px; min-width: 300px; position: relative;">
                <button style="position: absolute; top: 8px; right: 8px; background: none; border: none; font-size: 1.5rem; cursor: pointer;" onclick="closeFolderEditModal(<%= folder.id %>)">&times;</button>
                <h3>Editar pasta</h3>
                <%= render 'folders/edit_form', folder: folder %>
              </div>
            </div>
            <!-- Modal de nova lista para esta pasta -->
            <div id="list-modal-<%= folder.id %>" style="display: none; position: fixed; top: 0; left: 0; width: 100vw; height: 100vh; background: rgba(0,0,0,0.3); align-items: center; justify-content: center; z-index: 1000;">
              <div style="background: white; padding: 2rem; border-radius: 8px; min-width: 300px; position: relative;">
                <button style="position: absolute; top: 8px; right: 8px; background: none; border: none; font-size: 1.5rem; cursor: pointer;" onclick="closeListModal(<%= folder.id %>)">&times;</button>
                <h3>Nova lista</h3>
                <%= render 'lists/form', list: List.new(folder: folder), folder: folder %>
              </div>
            </div>
            <div class="lists-carousel drag-scroll" id="lists-carousel-<%= folder.id %>" style="padding: 18px 28px 0 28px;">
              <% folder.lists.order(:name).each do |list| %>
                <%= render partial: 'lists/list_card', locals: { list: list } %>
              <% end %>
            </div>
          </div>
        <% end %>
      </div>
    <% end %>
  </div>
</div>
<script>
// Modal de nova pasta
const openFolderModal = document.getElementById('open-folder-modal');
const closeFolderModal = document.getElementById('close-folder-modal');
const folderModal = document.getElementById('folder-modal');
if (openFolderModal && closeFolderModal && folderModal) {
  openFolderModal.onclick = () => folderModal.style.display = 'flex';
  closeFolderModal.onclick = () => folderModal.style.display = 'none';
}
// Modal de nova lista por pasta
function openListModal(folderId) {
  document.getElementById(`list-modal-${folderId}`).style.display = 'flex';
}
function closeListModal(folderId) {
  document.getElementById(`list-modal-${folderId}`).style.display = 'none';
}
// Modal de edição de pasta
function openFolderEditModal(folderId) {
  document.getElementById(`folder-edit-modal-${folderId}`).style.display = 'flex';
}
function closeFolderEditModal(folderId) {
  document.getElementById(`folder-edit-modal-${folderId}`).style.display = 'none';
}
// Drag-to-scroll para carrossel de listas
function enableDragScroll(carousel) {
  let isDown = false;
  let startX, scrollLeft;
  carousel.addEventListener('mousedown', (e) => {
    isDown = true;
    carousel.classList.add('scrolling');
    startX = e.pageX - carousel.offsetLeft;
    scrollLeft = carousel.scrollLeft;
  });
  carousel.addEventListener('mouseleave', () => {
    isDown = false;
    carousel.classList.remove('scrolling');
  });
  carousel.addEventListener('mouseup', () => {
    isDown = false;
    carousel.classList.remove('scrolling');
  });
  carousel.addEventListener('mousemove', (e) => {
    if (!isDown) return;
    e.preventDefault();
    const x = e.pageX - carousel.offsetLeft;
    const walk = (x - startX) * 1.2;
    carousel.scrollLeft = scrollLeft - walk;
  });
  // Touch events para mobile
  let touchStartX = 0, touchScrollLeft = 0;
  carousel.addEventListener('touchstart', (e) => {
    isDown = true;
    touchStartX = e.touches[0].pageX;
    touchScrollLeft = carousel.scrollLeft;
  });
  carousel.addEventListener('touchend', () => {
    isDown = false;
  });
  carousel.addEventListener('touchmove', (e) => {
    if (!isDown) return;
    const x = e.touches[0].pageX;
    const walk = (x - touchStartX) * 1.2;
    carousel.scrollLeft = touchScrollLeft - walk;
  });
}
window.addEventListener('DOMContentLoaded', () => {
  document.querySelectorAll('.lists-carousel').forEach(enableDragScroll);
});
</script>
